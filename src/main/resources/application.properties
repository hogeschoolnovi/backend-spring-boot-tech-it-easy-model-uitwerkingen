# naam van het platform
spring.sql.init.platform=postgres
# het adres van de database waar je verbinding mee wilt maken
spring.datasource.url=jdbc:postgresql://localhost:5432/TechItEasy
# Gebruikersnaam om in te loggen in je database
spring.datasource.username=postgres
# Wachtwoord om in te loggen in je database
spring.datasource.password=admin
# De driver om CRUD operaties op je database uit te voeren. In dit geval is het de postgres driver, maar het kan ook Mysql zijn.
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.driver-class-name=org.postgresql.Driver
# Geef aan welke database je gebruikt
spring.jpa.database=postgresql
# Geef aan dat je automatisch tabellen wilt genereren van je entiteiten
spring.jpa.generate-ddl=true
# Deze instelling is alleen nodig voor postgres gebruikers. Je krijgt een foutmelding als je dit weg laat.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Geef aan welk sql dialect je gebruikt. In dit geval is het postgres, maar het kan ook mysql zijn
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Geef aan welke database je gebruikt. In dit geval is het postgres, maar het kan ook mysql zijn
# spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Laat in de terminal zien welke sql code wordt uitgevoerd
spring.jpa.show-sql=true
# Geef aan op welke manier de tabellen worden gemaakt.
# Create-drop betekend dat bij elke herstart de tabellen worden verwijderd en weer opnieuw gemaakt, inclusief de inhoud.
spring.jpa.hibernate.ddl-auto=create-drop
# Initialiseer de database met de data uit het data.sql bestand
spring.sql.init.mode=always
# Initialiseer de database met de data uit het data.sql bestand
spring.jpa.defer-datasource-initialization=true